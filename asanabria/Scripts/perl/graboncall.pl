#!/usr/bin/perl -w
########################################################################################
#
#
#This script was created so that every friday the person in charge of email will change
#the oncall and oncall backup aliases to the right sa for that week
#Created by Allen Sanabria AKA Linux Dynasty
#last modified June 06
#last modified Oct 31st.. instead of using a file handle I'm using split.
#last modofied Nov 1st.. removeed elsif statements and put all in one if else statement
########################################################################################

use strict;
use LWP::Simple;
use HTTP::Request;
use Net::SMTP;

my $smtp = Net::SMTP->new('localhost');
$smtp->mail('root@cc17-10.us');
$smtp->to('is@mail.com');
$smtp->data();

my ( $sec, $min, $hour, $day, $month, $year, $wday, $yday, $isdst ) =
  localtime(time);
$month = $month + 1;
$year  = $year - 100;
my $hostname = `hostname`;
my $today    = "0$month\/0$day\/0$year";
my $today1   = "0$month\/$day\/0$year";
my $today2   = "$month\/0$day\/0$year";
my $today3   = "$month\/$day\/0$year";
my $URL      = "https://none:none\@hostname/OncallSchedule?action=raw";
my $content  = get($URL);
my @line     = split( /\n/, $content );
shift @line;
shift @line;
shift @line;
my $j = 0;
my $oncall;
my $found = "false";

foreach (@line) {
    chomp $_;
    s/^\s+//g, s/\|\|/ /g, s/'/ /g, s/\s+/ /g, s/^\s+//g;
}
foreach $oncall (@line) {
    if (   $line[$j] =~ /$today/
        || $line[$j] =~ /$today1/
        || $line[$j] =~ /$today2/
        || $line[$j] =~ /$today3/ )
    {
        &MAIL;
        $found = "true";
        exit;
    }
    else {
        $j++;
        next;
    }

}
if ( $found =~ /false/ ) {
    $smtp->datasend("To: is\@mail.com\n");

    #$smtp->datasend("Cc: sa\@mail.communityconnect.com\n");
    $smtp->datasend("Subject: This Weeks Oncall Schedule\n");
    $smtp->datasend("\n");
    $smtp->datasend("\tTHIS WEEKS ONCALL SCHEDULE\n\n");
    $smtp->datasend("No Schedule Found, please update schedule online!!\n\n");
    $smtp->datasend(
        "This schedule is grabbed from https://hostname/OncallSchedule\n");
    $smtp->datasend(
"Please always modify schedule in the same format and keep this schedule up2date\n"
    );
    $smtp->datasend(
"This email notification was generated by graboncall.pl running on $hostname\n"
    );
    $smtp->dataend();
    $smtp->quit;
}
else {
    exit;
}

sub MAIL {
    $smtp->datasend("To: is\@mail.com\n");
    $smtp->datasend("Subject: This Weeks Oncall Schedule\n");
    $smtp->datasend("\n");
    $smtp->datasend("\tTHIS WEEKS ONCALL SCHEDULE\n\n");
    $smtp->datasend("  \tWEEK\t    Oncall     BackupOncall \n");
    $smtp->datasend("$line[$j]\n\n");
    $smtp->datasend(
        "This schedule is grabbed from https://hostname/OncallSchedule\n");
    $smtp->datasend(
"Please always modify schedule in the same format and keep this schedule up2date\n"
    );
    $smtp->datasend(
        "Email notification was generated by graboncall.pl on $hostname\n");
    $smtp->dataend();
    $smtp->quit;
}
